version: '3.8'

services:
  # Servicio de la API
  api:
    build: .
    container_name: api-calculator
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/calculator_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_PROFILES_ACTIVE=prod
      - APP_EXTERNAL_SERVICE_URL=http://mock-percentage-service:8080/api/mock/percentage
      - APP_EXTERNAL_SERVICE_MOCK=false
    depends_on:
      db:
        condition: service_healthy
      mock-percentage-service:
        condition: service_healthy
    networks:
      - calculator-network
    restart: always
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s

  # Servicio de la base de datos PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: calculator-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=calculator_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - calculator-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Servicio mock para el porcentaje (simulaci√≥n del servicio externo)
  mock-percentage-service:
    image: wiremock/wiremock:latest
    container_name: mock-percentage-service
    ports:
      - "8081:8080"
    volumes:
      - ./mock:/home/wiremock/mappings
    networks:
      - calculator-network
    restart: always
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/__admin/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  calculator-network:
    driver: bridge

volumes:
  postgres-data: 